{% extends '/layout_manager.html.twig' %}

{% block page_title %}
    myCLAP Manager - Mise en ligne
{% endblock %}

{% block content %}

    <div class="header-center no-border">
        <div>
            <h2>{{ video.name }}</h2>
            <h1>Mettre en ligne</h1>
            <p class="max-w-1000 ms-auto">
                A partir de cette page vous allez pouvoir envoyer votre vidéo. Le site a été conçu pour être capable de
                reprendre le téléchargement si jamais cette page venait à être fermée.
            </p>
        </div>
    </div>

    <div class="overlay p-20 max-w-1000 ms-auto br-5">

        <div id="video-input">
            <form method="{{ form.method }}" action="{{ form.action }}" enctype="{{ form.enctype }}" class="mb-0">

                {% if upload %}
                    <div class="alert alert-warning">
                        <p>
                            Le chargement du fichier "<b>{{ upload.file_name }}</b>" ({{ upload.file_size//1000000 }} Mo) a été
                            interrompu avant de pouvoir se terminer.<br>
                            Veuillez sélectionner ce fichier pour reprendre le chargement.
                        </p>
                        <p>
                            Vous pouvez aussi <a id="reset" href="#">réinitialiser le téléversement</a> pour envoyer un nouveau fichier.
                        </p>
                    </div>
                {% endif %}

                <div class="field">
                    {{ form.video|render }}
                </div>
                <div class="text-center" style="font-size: 0.75em">
                    <a href="#" style="color: #c0c0c0" id="start-upload">Cliquez ici si la mise en ligne ne se lance pas automatiquement</a>
                </div>
            </form>
        </div>

        <div id="video-progress" style="display: none">

            <p class="text-center text-muted">Ne quittez pas cette page tant que le chargement n'est pas terminé</p>

            <div class="layout mb-30">
                <div class="flex-auto" style="padding: 0 10px">
                    <progress max="100" value="0"></progress>
                </div>
                <div class="w-100 text-right text-red layout center" style="padding-right: 15px">
                    <h4><span id="percentage-display">17</span>%</h4>
                </div>
            </div>
        </div>

        <div id="video-success" style="display: none">
            <div class="max-w-750 ms-auto">
                <div class="alert alert-success text-center">
                    <h2>La vidéo a bien été mise en ligne</h2>
                    <p>Elle est accessible ici : <a href="{{ route_url('watch-index', video.token) }}">{{ __host }}{{ route_url('watch-index', video.token) }}</a></p>
                </div>
            </div>
        </div>

    </div>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script>


        {% if upload %}
        $('#reset').on('click', function(e) {
            e.preventDefault();
            $.api.post('{{ route_url('manager-video-uploadapi-reset', video.token) }}', {},
                function(json) {
                    if (json.success) {
                        location.reload();
                    } else {
                        alert(json.message);
                    }
                }
            );
        });
        {% endif %}

        var req;

        $('#video').on('change', function (e) {
            e.preventDefault();
            upload();
        });
        $('#start-upload').on('click', function (e) {
            e.preventDefault();
            upload();
        })


        function upload() {
            // Check the user submit only 1 file
            var files = $('#video').get('files');
            if (files.length === 0) {
                return;
            } else if (files.length > 1) {
                alert('Vous ne pouvez mettre en ligne qu\'une seule vidéo à la fois');
            }
            var file = files.item(0);

            var startIndex = 0;
            var endIndex = 0;
            var sliceSize = null;
            var percentage = 0;

            function fileSlice(file, start, end) {
                var slice = file.mozSlice ? file.mozSlice :
                    file.webkitSlice ? file.webkitSlice :
                        file.slice ? file.slice : noop;

                return slice.bind(file)(start, end);
            }

            // Update the progress bar
            function progress_bar() {
                console.log(Math.max(1, parseInt(percentage)));
                $('#video-progress progress').attr('value', Math.max(1, parseInt(percentage)));
                $('#percentage-display').text(Math.max(1, parseInt(percentage)));
            }

            // Processing function that send chunk of the file
            function process() {
                endIndex = Math.min(startIndex + sliceSize, file.size);
                $.api.post('{{ route_url('manager-video-uploadapi-process', video.token) }}', {
                    startIndex: startIndex,
                    startedOn: Math.floor(Date.now() / 1000),
                    chunkSize: sliceSize,
                    fileChunk: fileSlice(file, startIndex, endIndex)
                }, function(json) {
                    if (json.success) {
                        if (json.payload.completed) {
                            end();
                        } else {
                            console.log("chunkSize", json.payload.chunkSize);
                            startIndex = json.payload.startIndex;
                            sliceSize = json.payload.chunkSize;
                            percentage = startIndex/file.size * 100;
                            progress_bar();
                            setTimeout(process, 100);
                        }
                    } else {
                        alert(json.message);
                    }
                })
            }

            // Call to the endpoint that end the upload
            function end() {
                $.api.post('{{ route_url('manager-video-uploadapi-end', video.token) }}', {}, function(json) {
                    if (json.success) {
                        // Managing the UI
                        percentage = 100;
                        progress_bar();
                        $('#video-progress').hide();
                        $('#video-success').show();
                    } else {
                        alert(json.message);
                    }
                })
            }

            // Initiate the upload
            $.api.post('{{ route_url('manager-video-uploadapi-init', video.token) }}', {
                fileName: file.name,
                fileSize: file.size
            }, function(json) {
                if (json.success) {

                    // Managing the UI
                    $('#video-input').hide();
                    $('#video-progress').show();

                    startIndex = json.payload.startIndex;
                    sliceSize = json.payload.chunkSize;
                    percentage = startIndex/file.size * 100;
                    console.log(json.payload.startIndex);
                    progress_bar();
                    setTimeout(process, 100);
                } else {
                    alert(json.message);
                    $('#video')
                        .set('value', null)
                        .trigger('change')
                    ;
                }
            });
        }

    </script>
{% endblock %}